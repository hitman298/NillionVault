# Docker Compose for local development
# Run with: docker-compose up

version: '3.8'

services:
  # PostgreSQL Database (alternative to Supabase for local dev)
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: nillionvault
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for queue
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/nillionvault
      - UPSTASH_REDIS_REST_URL=redis://redis:6379
      - UPSTASH_REDIS_REST_TOKEN=dummy
      - SUPABASE_URL=http://localhost:5432
      - SUPABASE_SERVICE_ROLE_KEY=dummy
      - NILLION_API_KEY=${NILLION_API_KEY}
      - NILLION_RPC_URL=https://rpc-testnet.nillion.com
      - NILLION_NETWORK=testnet
      - DEV_ADDRESS_PRIVATE_KEY=${DEV_ADDRESS_PRIVATE_KEY}
      - FRONTEND_URL=http://localhost:3000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ../backend:/app
      - /app/node_modules
    command: npm run dev

  # Frontend
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:3001
      - NEXT_PUBLIC_NILLION_EXPLORER=https://testnet.nillion.explorers.guru
    depends_on:
      - backend
    volumes:
      - ../frontend:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev

volumes:
  postgres_data:
  redis_data:
